package (
    AtumObject,
    create)
with
    import 'knockout-2.2.1' ko,
    
    import 'atum/compute' {just},
    
    import 'sheut/debug' debug,
    import 'sheut/run' run,
    import 'sheut/fun' {map},
    import 'sheut/operations/object' object,
    import 'sheut/operations/reference' reference
in {

static $;

var noop = \->{};

/* 
 ******************************************************************************/
var AtumChild = function(key, value) {
    var self = this;

    self.key = ko.observable(key);
    self.value = ko.observable(value);
};

AtumObject = function(d, x) {
    var self = this;
    
    var value = run.extract(d, reference.getValue(x), null);
    
    self.value = ko.observable(value);
    self.children = ko.observableArray();
    
    self.getChildren = \data, event -> {
        var self = this;
        var value = self.value();
        
        if (this.children().length)
            return;
        
        if (value && value.type === 'object') {
            run.extract(d, object.getOwnPropertyNames(x), null,
                (map, \key ->
                    run.extract(d,
                        object.get(x, key),
                        null,
                        \value -> self.children.push(new AtumChild(key, new AtumObject(d, value))))));
        }
        if (event)
            $('.object-browser')
                .accordion({
                    'heightStyle': "content"
                });
    };
};


create = \value, ctx -> {
    var obj = new AtumObject(debug.debug(just(value), ctx, noop, noop), value);
    obj.getChildren();
    return obj;
};

}