package ()
with
    import 'knockout-2.2.1' ko,
    
    import 'atum_debug_console/model/console_view_model' atum_debug_model,
    import 'atum_debug_console/object_explorer' object_explorer,
    import 'atum_debug_console/accordion-binding' accortion_binding,
    import 'atum_debug_console/editor/interactive' interactive
in {

static CodeMirror;
static document;
static $;

var model;

/* 
 ******************************************************************************/
var out = {
    'write': \x, ctx -> {
        model.pushResult(x, ctx, false);
        $('#output > ul')
            .scrollTop($('#output > ul')[0].scrollHeight);
    }
};

var errorOut = {
    'write': \x, ctx -> {
        model.pushResult(x, ctx, true);
        $('#output > ul')
            .scrollTop($('#output > ul')[0].scrollHeight);
    }
};

/* Code Mirror
 ******************************************************************************/
var cm = CodeMirror(document.getElementById('input'), {
    'mode': 'javascript',
    'lineNumbers': true
});

var doc = cm.doc;

/* 
 ******************************************************************************/
accortion_binding.init();

model = new atum_debug_model.ConsoleViewModel();

ko.applyBindings(model);

model.location.subscribe(\current -> {
    if (current && current.start)
        cm.removeLineClass(current.start.line - 1, 'background', 'active-line');
}, null, 'beforeChange');

model.location.subscribe(\x -> {
    if (x && x.start)
       cm.addLineClass(x.start.line - 1, 'background', 'active-line');
});

/* 
 ******************************************************************************/
$(function(){
    
    interactive.create(document.getElementById('output-interactive-textarea'), model);
    
    var stopButton = $('button#stop-button'),
        runButton = $('button#run-button'),
        stepButton = $('button#step-button'),
        stepOutButton = $('button#step-out-button'),
        stepIntoButton = $('button#step-into-button'),
        stepOverButton = $('button#step-over-button');
    
    $('#container')
        .layout();
    
    $('#left-panel')
        .tabs();
    
    $('#right-panel')
        .tabs();
    
    model.debug.subscribe(\x -> {
        var disable = !x || x.debug.complete;
        stopButton.button('option', "disabled", disable);
        runButton.button('option', "disabled", disable);
        stepButton.button('option', "disabled", disable);
        stepOverButton.button('option', "disabled", disable);
        stepIntoButton.button('option', "disabled", disable);
        stepOutButton.button('option', "disabled", disable);
    });
    
    $("#output > ul").on("accordionactivate", '.object-browser', \event, ui ->
        $('#output > ul').scrollTop($(this).offset().top));
    
    $('button#eval-button')
        .button()
        .click(\-> {
            model.beginDebugging(
                doc.getValue(),
                out.write,
                errorOut.write);
            model.finish();
        });
     
    $('button#debug-button')
        .button()
        .click(\->
            model.beginDebugging(
                doc.getValue(),
                out.write,
                errorOut.write));
    
    stopButton
        .button({'disabled': true})
        .click(function(e){
            model.stop();
        });

    runButton
        .button({'disabled': true})
        .click(function(e) {
            model.run();
        });
    
    stepButton
        .button({'disabled': true})
        .click(function(e){
            model.stepOver();
        });
    
    stepIntoButton
        .button({'disabled': true})
        .click(function(e){
            model.stepInto();
        });
    
    stepOutButton
        .button({'disabled': true})
        .click(function(e){
            model.stepOut();
        });
});

}