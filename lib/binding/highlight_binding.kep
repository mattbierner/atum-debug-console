/**
 * 
 */
package (
    init) {

static $;
static CodeMirror;

var DEFAULTS = {
    'mode': 'javascript',
    'lineNumbers': false,
    'readOnly': true
};

init = \ko -> {
    ko.bindingHandlers.highlight = {
        'init': \element, valueAccessor, allBindings, viewModel, bindingContext -> {
            var value = valueAccessor();
            
            var options = $.extend(false, {'value': value}, DEFAULTS);
            var editor = CodeMirror(element, options);
            
            ko.utils.domNodeDisposal.addDisposeCallback(element,
                let wrapperElement = $(editor.getWrapperElement()) in
                    \() -> void wrapperElement.remove());
        }
    };
};

}